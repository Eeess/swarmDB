const fs = require('fs');
const cmd = require('node-cmd');
const waitUntil = require('async-wait-until');
import {filter, includes} from 'lodash';

// Path to where C++ Daemon was built
const PATH_TO_DAEMON = '../../../../../daemon-build';

describe('daemon', () => {
    var logFile;

    beforeEach( async () => {
        cmd.run('cd ../../; yarn run-daemon'); // Working directory originates to where Chimp is called)

        await waitUntil( () => {
            // Log file is generated by Daemon in /daemon folder
            let dirContent = logDirContent('/daemon');
            logFile = filter(dirContent, file => includes(file, '.log'))[0];
            return filter(dirContent, file => includes(file, '.log'))[0];
        });

        cmd.run('cd ../../; yarn daemon-kill');

        await waitUntil( () =>
            // Log file is moved to /daemon/logs after Daemon is stopped
            filter(logDirContent('/daemon/logs'), file => includes(file, logFile))[0]
        );
    });

    describe('on startup', () => {
        it('should create a log', () =>
            expect(readFile(logFile)).to.have.string('Loading: bluzelle.json')
        );
    });

    describe('on shutdown', () => {
       it('should log "shutting down"', () =>
           expect(readFile(logFile)).to.have.string('signal received -- shutting down')
       );
    });
});

const readFile = fileName =>
    fs.readFileSync( PATH_TO_DAEMON + '/daemon/logs/' + fileName, 'utf8');

const logDirContent = path =>
    fs.readdirSync(PATH_TO_DAEMON + path);
